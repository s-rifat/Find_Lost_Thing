<!-- Full Code Replace || Design Complete -->

@model FindLostThings.Models.Product

@{
    ViewBag.Title = "Post";
}

<h2>Claim Your Issue</h2>

<br />


<hr class="dotted border-top: 8px dotted #bbb bg-warning">

<p class="p-2"></p>



<!--Section: Contact v.2-->
<section class="mb-4">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <!--Section heading-->
        <h2 class="h1-responsive font-weight-bold text-center my-4">Write Post</h2>



        <div class="row">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })



            <!--Left SECTION-->
            <!--Grid column-->
            <div class="col-md-3 text-center">









            </div>
            <!--Grid column-->
            <!-- RIGHT SECTION-->
            <!--Grid column-->
            <div class="col-md-9 mb-md-0 mb-5">


                <!-- product name -->
                <div class="form-group">
                    @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @* @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("productName", new List<SelectListItem>
                     {
                         new SelectListItem{Text = "Phone",Value = "Phone"},
                         new SelectListItem{Text = "Camera",Value = "Camera"},
                         new SelectListItem{Text = "Wallet",Value = "Wallet"},
                         new SelectListItem{Text = "Purse",Value = "Purse"},
                         new SelectListItem{Text = "Bag",Value = "Bag"},
                         new SelectListItem{Text = "Headphones",Value = "Headphones"},
                         new SelectListItem{Text = "Keys",Value = "Keys"},
                         new SelectListItem{Text = "Umbrella",Value = "Umbrella"},
                         new SelectListItem{Text = "USBdrive",Value = "USBdrive"},
                         new SelectListItem{Text = "Glasses",Value = "Glasses"},
                         new SelectListItem{Text = "Laptop",Value = "Laptop"},
                         new SelectListItem{Text = "Pendrive",Value = "Pendrive"},
                         new SelectListItem{Text = "Key",Value = "Key"},
                         new SelectListItem{Text = "Briefcase",Value = "Briefcase"},
                         new SelectListItem{Text = "Suitcase",Value = "Suitcase"},
                     }, "Select item")
                        @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr class="my-3">

                <!-- color -->
                <div class="form-group">
                    @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*  @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("color", new List<SelectListItem>
                    {
                        new SelectListItem{Text = "Red",Value = "Red"},
                        new SelectListItem{Text = "Blue",Value = "Blue"},
                        new SelectListItem{Text = "Green",Value = "Green"},
                        new SelectListItem{Text = "Yellow",Value = "Yellow"},
                        new SelectListItem{Text = "Black",Value = "Black"},
                        new SelectListItem{Text = "White",Value = "White"},
                        new SelectListItem{Text = "Pink",Value = "Pink"},
                        new SelectListItem{Text = "Gray",Value = "Gray"},
                        new SelectListItem{Text = "Purple",Value = "Purple"},
                        new SelectListItem{Text = "Silver",Value = "Silver"},
                        new SelectListItem{Text = "Golden",Value = "Golden"},
                         new SelectListItem{Text = "Brown",Value = "Brown"}

                   }, "Select color")
                        @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- manufacturer -->
                <div class="form-group">
                    @Html.LabelFor(model => model.manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.manufacturer, "", new { @class = "text-danger" })
                    </div>
                </div>


                <!-- model name -->
                <div class="form-group">
                    @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- postal code -->
                <div class="form-group">
                    @Html.LabelFor(model => model.postalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.postalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.postalCode, "", new { @class = "text-danger" })
                    </div>
                </div>



                <!-- date -->
                <div class="form-group">
                    @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                    </div>
                </div>


                <!-- description -->
                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- butoon -->
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Post" class="btn btn-primary" />
                    </div>
                </div>
            </div>

        </div>
    }

</section>






<div class="container">
    <p class="p-2"></p>
    @Html.ActionLink("Back", "Welcome", "Account")
</div>


@section Scripts {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>
}




